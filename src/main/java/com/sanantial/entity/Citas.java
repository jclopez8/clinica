package com.sanantial.entity;

// Generated Jan 11, 2014 3:22:19 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Citas generated by hbm2java
 */
@Entity
@Table(name = "citas", catalog = "sanantialdb")
public class Citas implements java.io.Serializable,  Comparable<Citas> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer citasId;
	private Paciente paciente;
	private Enfermera enfermera;
	private NotaVenta notaVenta;
	private Date fecha;
	private Date hora;
	private String consulta;
	private String status;
	private byte[] observaciones;
	private Set<Tratamiento> tratamientos = new HashSet<Tratamiento>(0);

    public Citas(){}

	public Citas(Paciente paciente, NotaVenta notaVenta) {
		this.paciente = paciente;
		this.notaVenta = notaVenta;
	
	}

	public Citas(Paciente paciente, Enfermera enfermera, NotaVenta notaVenta,
			 Date fecha, String consulta, String status,
			Set<Tratamiento> tratamientos) {
		this.paciente = paciente;
		this.enfermera = enfermera;
		this.notaVenta = notaVenta;
		this.fecha = fecha;
		this.consulta = consulta;
		this.status = status;
		this.tratamientos = tratamientos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "citas_id", unique = true, nullable = false)
	public Integer getCitasId() {
		return this.citasId;
	}

	public void setCitasId(Integer citasId) {
		this.citasId = citasId;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	//@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "paciente_id", nullable = false)
	public Paciente getPaciente() {
		return this.paciente;
	}

	public void setPaciente(Paciente paciente) {
		this.paciente = paciente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "enfermera_id")
	public Enfermera getEnfermera() {
		return this.enfermera;
	}

	public void setEnfermera(Enfermera enfermera) {
		this.enfermera = enfermera;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	//@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "nota_venta_id", nullable = false)
	public NotaVenta getNotaVenta() {
		return this.notaVenta;
	}

	public void setNotaVenta(NotaVenta notaVenta) {
		this.notaVenta = notaVenta;
	}


	@Temporal(TemporalType.DATE)
	@Column(name = "fecha", length = 10)
	public Date getFecha() {
		return this.fecha;
	}

	public void setFecha(Date fecha) {
		System.out.println("fecha en el SET: "+fecha);
		this.fecha = fecha;
	}
	
	@Temporal(TemporalType.TIME)
	@Column(name = "hora", length = 0)
	public Date getHora() {
		return this.hora;
	}

	public void setHora(Date hora) {
		this.hora = hora;
	}

	@Column(name = "consulta", length = 45)
	public String getConsulta() {
		return this.consulta;
	}

	public void setConsulta(String consulta) {
		this.consulta = consulta;
	}

	@Column(name = "status", length = 45)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "citas_has_tratamiento", catalog = "sanantialdb", joinColumns = { @JoinColumn(name = "citas_id", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "tratamiento_id", nullable = false, updatable = false) })
	public Set<Tratamiento> getTratamientos() {
		return this.tratamientos;
	}

	public void setTratamientos(Set<Tratamiento> tratamientos) {
		this.tratamientos = tratamientos;
	}
	
	@Column(name = "observaciones")
	public byte[] getObservaciones() {
		return this.observaciones;
	}

	public void setObservaciones(byte[] observaciones) {
		this.observaciones = observaciones;
	}

	@Override
	public int compareTo(Citas o) {
		// TODO Auto-generated method stub
		return this.hora.compareTo(o.getHora());
	}

}
